AC_INIT(configure.in)
AC_PREREQ(2.59)
AC_CONFIG_HEADER(config.h)

AC_CONFIG_MACRO_DIR(m4)
AM_INIT_AUTOMAKE(xneur, 0.9.3)

AC_PROG_LIBTOOL
AC_PROG_INSTALL

AC_LANG_C
AM_PROG_CC_C_O
AC_PROG_MAKE_SET

AC_HEADER_STDC

PKG_PROG_PKG_CONFIG([0.20])

PKG_CHECK_MODULES(X11, [x11 >= 1.1], found_x11="yes", found_x11="no")
if test "x$found_x11" = "xno"; then
	AC_PATH_XTRA

	if test "x$no_x" = "xyes"; then
		AC_MSG_ERROR([Can't locate your X11 installation])
	fi

	X11_CFLAGS="$X_CFLAGS"
	X11_LIBS="$X_LIBS -lX11"

	AC_SUBST(X11_CFLAGS)
	AC_SUBST(X11_LIBS)
fi

AC_ARG_WITH(sound, [  --with-sound[[=ARG]]	  Compile with sound support ARG=[[yes|no|gstreames|openal|aplay]] [[default=yes]]])
if test "x$with_sound" != "xno"; then
	if test "x$with_sound" = "x"; then
		with_sound="gstreamer"
	fi

	case $with_sound in
		gstreamer|yes)
			PKG_CHECK_MODULES(GSTREAMER, [gstreamer-0.10 >= 0.10.6])
			AC_DEFINE(WITH_GSTREAMER, 1, [Define if you want gstreamer sound support])
			;;
		openal)
			PKG_CHECK_MODULES(FREEALUT, [freealut >= 1.0.1])
			AC_DEFINE(WITH_OPENAL, 1, [Define if you want openal sound support])
			;;
		aplay)
			found_aplay_bin_dir=""
			for aplay_dir in /usr/local /usr $prefix
			do
				if test -f "$aplay_dir/bin/aplay"; then
					found_aplay_bin_dir="$aplay_dir/bin"
				fi
			done

			AC_MSG_CHECKING([for aplay bin])
			if test "x$found_aplay_bin_dir" != "x"; then
				AC_MSG_RESULT([found at $found_aplay_bin_dir])
			else
				AC_MSG_RESULT([no])
				AC_MSG_ERROR([Can't locate your aplay bin])
			fi

			AC_DEFINE(WITH_APLAY, 1, [Define if you want aplay support])
			APLAY_LIBS="-lpthread"
			AC_SUBST(APLAY_LIBS)
			;;
		*)
			AC_MSG_ERROR([Unsupported sound system selected, --with-sound=[[yes|no|gstreamer|openal]]])
			;;
	esac

	AC_DEFINE(WITH_SOUND, 1, [Define if you want sound support])
fi

AC_ARG_WITH(debug, [  --with-debug		  Compile with debug support])
if test "x$with_debug" == "xyes"; then
	AC_DEFINE(WITH_DEBUG, 1, [Define if you want debug support])
fi

AC_ARG_WITH(pcre, [  --without-pcre	  Compile without pcre support])
if test "x$with_pcre" != "xno"; then
	PKG_CHECK_MODULES(PCRE, [libpcre >= 5.0])
	AC_DEFINE(WITH_PCRE, 1, [Define if you want pcre support])
fi

AC_ARG_WITH(xpm, [  --without-xpm	  Compile without xpm support])
if test "x$with_xpm" != "xno"; then
	PKG_CHECK_MODULES(XPM, [xpm ])
	AC_DEFINE(WITH_XPM, 1, [Define if you want xmp support])
fi

AC_ARG_WITH(aspell, [  --without-aspell	  Compile without aspell support])
if test "x$with_aspell" != "xno"; then
	found_aspell_include_dir=""
	found_aspell_lib_dir=""
	for aspell_dir in /usr/local /usr $prefix
	do
		if test -f "$aspell_dir/include/aspell.h"; then
			found_aspell_include_dir="$aspell_dir/include"
		fi

		if test -f "$aspell_dir/lib/libaspell.so"; then
			found_aspell_lib_dir="$aspell_dir/lib"
		fi
	done

	AC_MSG_CHECKING([for aspell header])
	if test "x$found_aspell_include_dir" != "x"; then
		AC_MSG_RESULT([found at $found_aspell_include_dir])
		ASPELL_CFLAGS="-I$found_aspell_include_dir"
	else
		AC_MSG_RESULT([no])
		AC_MSG_ERROR([Can't locate your aspell headers])
	fi

	AC_MSG_CHECKING([for aspell library])
	if test "x$found_aspell_lib_dir" != "x"; then
		AC_MSG_RESULT([found at $found_aspell_lib_dir])
		ASPELL_LIBS="-L$found_aspell_lib_dir -laspell"
	else
		AC_MSG_RESULT([no])
		AC_MSG_ERROR([Can't locate your aspell library])
	fi

	AC_DEFINE(WITH_ASPELL, 1, [Define if you want aspell support])
	AC_SUBST(ASPELL_CFLAGS)
	AC_SUBST(ASPELL_LIBS)
fi

AC_ARG_WITH(xosd, [  --without-osd	  Compile without xosd support])
if test "x$with_xosd" != "xno"; then
	found_xosd_bin_dir=""
	for xosd_dir in /usr/local /usr $prefix
	do
		if test -f "$xosd_dir/bin/xosd-config"; then
			found_xosd_bin_dir="$xosd_dir/bin"
		fi
	done

	AC_MSG_CHECKING([for xosd-config bin])
	if test "x$found_xosd_bin_dir" != "x"; then
		AC_MSG_RESULT([found at $found_xosd_bin_dir])
	else
		AC_MSG_RESULT([no])
		AC_MSG_ERROR([Can't locate your xosd-config bin])
	fi

	AC_DEFINE(WITH_XOSD, 1, [Define if you want xosd support])
	XOSD_LIBS=`xosd-config --libs`
	XOSD_CFLAGS=`xosd-config --cflags`

	AC_SUBST(XOSD_CFLAGS)
	AC_SUBST(XOSD_LIBS)
fi

CFLAGS="-Wall -Wextra -Werror -g0 -fPIC -std=gnu99"
AC_SUBST(CFLAGS)

AC_OUTPUT([share/Makefile share/sounds/Makefile share/pixmaps/Makefile share/en/Makefile share/ru/Makefile share/uk/Makefile share/be/Makefile share/fr/Makefile share/ro/Makefile share/kz/Makefile share/de/Makefile  etc/Makefile lib/Makefile lib/ai/Makefile lib/config/Makefile lib/misc/Makefile lib/sound/Makefile lib/x/Makefile src/Makefile Makefile xnconfig.pc])

cat << EOF

$PACKAGE $VERSION configured successfully:

	Installing into:		$prefix

	Compiler flags:			$CFLAGS
	Linker flags:			$LDFLAGS

	X11 compiler flags:		$X11_CFLAGS
	X11 linker flags:		$X11_LIBS

	Pcre compiler flags:		$PCRE_CFLAGS
	Pcre linker flags:		$PCRE_LIBS

EOF

case $with_sound in
	gstreamer|yes)
cat << EOF
	Gstreamer compiler flags:	$GSTREAMER_CFLAGS
	Gstreamer linker flags:		$GSTREAMER_LIBS

EOF
		;;
	openal)
cat << EOF
	FreeALUT compiler flags:	$FREEALUT_CFLAGS
	FreeALUT linker flags:		$FREEALUT_LIBS

EOF
		;;
	aplay)
cat << EOF
	Aplay support enable.

EOF
		;;
esac

if test "x$with_aspell" != "xno"; then
cat <<EOF
	Aspell compiler flags:		$ASPELL_CFLAGS
	Aspell linker flags:		$ASPELL_LIBS

EOF
fi

if test "x$with_xpm" != "xno"; then
cat <<EOF
	Xpm compiler flags:		$XPM_CFLAGS
	Xpm linker flags:		$XPM_LIBS

EOF
fi

if test "x$with_xosd" != "xno"; then
cat <<EOF
	Xosd compiler flags:		$XOSD_CFLAGS
	Xosd linker flags:		$XOSD_LIBS

EOF
fi
