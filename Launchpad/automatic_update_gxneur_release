#!/bin/sh

# Must be from GPG key
export DEBEMAIL="Andrew Crew Kuznetsov <andrewcrew@rambler.ru>"

cd "${HOME}/develop/xneur/Launchpad"

if !([ -e gxneur_*.orig.tar.gz ]); then
  echo "File gxneur_*.orig.tar.gz is not found.";
  export OLD_VER=0;
else
  export OLD_VER=$(ls gxneur_*.orig.tar.gz | sed -e "s/^gxneur_\(.*\).orig.tar.gz$/\1/");
fi

echo "Updating is started."

export CUR_VER=$(svn cat svn://xneur.ru:3690/xneur/gxneur/configure.in | grep "AM_INIT_AUTOMAKE" | sed -e "s/^AM_INIT_AUTOMAKE(gxneur, \(.*\))$/\1/")
export NEW_VER="${CUR_VER}"

echo "OLD_VER = ${OLD_VER}"
echo "NEW_VER = ${NEW_VER}"

if [ ${NEW_VER} = ${OLD_VER} ]; then
	echo "Upgrading is not required.";
	read -p "You'r rebuild packages (y/N)?" RESP
	
	if [ "$RESP" != y ] ; then
		echo "Rebuilding is not required.";
		exit 0;
	fi
fi

# begin local updating
svn update ../gxneur/
svn export ../gxneur/ "gxneur-tmp"
# end local updating

# building to dist
cd ./"gxneur-tmp"
# save debianize settings
mv ./debian ../
./autogen.sh
make distcheck
mkdir ../"gxneur-${CUR_VER}"
tar -xvf "gxneur-${CUR_VER}.tar.gz" -C ../
cd ..
rm -R ./"gxneur-tmp"
# end building

#Create .orig.tar.gz
tar -czf "gxneur_$NEW_VER.orig.tar.gz" "gxneur-${CUR_VER}"

cd "gxneur-${CUR_VER}"
# restore debianize settings
mv ../debian ./

read -p "Build package only on local system (y/N)?" RESPONSE
echo
if [ "$RESPONSE" = y ] ; then
	# If you want to build package on your system uncomment this:
	dch -v "$NEW_VER" "New Upstream version 0.12.0"
	dpkg-buildpackage -rfakeroot

	cd ..
	rm -R "gxneur-${CUR_VER}"
else

# Note: I am using gnupg-agent for comfortable work

# begin update for basic releases
dch -b --force-distribution --distribution "natty" -v "${NEW_VER}-0natty" \
  "New Upstream version 0.11.0"
debuild -S -sa
# end update for basic releases

# Full list: hardy intrepid jaunty karmic lucid maverick natty
# But not all of them are available, see: https://launchpad.net/ubuntu/+ppas
# begin update for other releases
cp debian/changelog ../changelog # copy basic changelog

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "maverick" -v "${NEW_VER}-0maverick" \
  "New Upstream version 0.12.0"
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "lucid" -v "${NEW_VER}-0lucid" \
  "New Upstream version 0.12.0"
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "karmic" -v "${NEW_VER}-0karmic" \
  "New Upstream version 0.12.0"
debuild -S -sd

mv debian/source ../ # make dirty hack

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "jaunty" -v "${NEW_VER}-0jaunty" \
  "New Upstream version 0.12.0"
debuild -S -sd

mv ../source debian/ # rollback dirty hack

mv ../changelog debian/changelog # rollback basic changelog
# end update for other releases

cd ..
echo "Download to Launchpad Natty..."
dput ppa gxneur_${NEW_VER}-0natty_source.changes | cat
echo "Download to Launchpad Maverick..."
dput ppa gxneur_${NEW_VER}-0maverick_source.changes | cat
echo "Download to Launchpad Lucid..."
dput ppa gxneur_${NEW_VER}-0lucid_source.changes | cat
echo "Download to Launchpad Karmic..."
dput ppa gxneur_${NEW_VER}-0karmic_source.changes | cat
echo "Download to Launchpad Jaunty..."
dput ppa gxneur_${NEW_VER}-0jaunty_source.changes | cat

rm -R "gxneur-${CUR_VER}"

fi

echo "Update GXNEUR finished successfully"


