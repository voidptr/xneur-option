#!/bin/sh

# Must be from GPG key
export DEBEMAIL="Andrew Crew Kuznetsov <andrewcrew@rambler.ru>"

if !([ -e xneur_*.orig.tar.gz ]); then
  echo "File xneur_*.orig.tar.gz is not found.";
  export OLD_VER=0;
else
  export OLD_VER=$(ls xneur_*.orig.tar.gz | sed -e "s/^xneur_\(.*\).orig.tar.gz$/\1/");
fi

export LAST_REVISION=$(hg su | grep "родитель:[\ ]*[0-9]\+" | sed -e "s/^родитель:[\ ]*\([0-9]\+\).*$/\1/")

echo "Number of last revision: ${LAST_REVISION}"

if [ -z ${LAST_REVISION} ]; then
  echo "Error: number of last revision is empty!";
  exit 0;
fi

echo "Updating is started."
# begin local updating
hg pull
hg update
hg merge

export CUR_VER=$(cat ../xneur/configure.in | grep "AM_INIT_AUTOMAKE" | sed -e "s/^AM_INIT_AUTOMAKE(xneur, \(.*\))$/\1/")
export NEW_VER="${CUR_VER}"

echo "OLD_VER = ${OLD_VER}"
echo "NEW_VER = ${NEW_VER}"

if [ ${NEW_VER} = ${OLD_VER} ]; then
	echo "Upgrading is not required.";
	read -p "You'r rebuild packages (y/N)?" RESP
	
	if [ "$RESP" != y ] ; then
		echo "Rebuilding is not required.";
		exit 0;
	fi
fi

# begin local updating
hg archive -t files "xneur-tmp"

# end local updating

# building to dist
cd ./"xneur-tmp"/xneur
# save debianize settings
mv ./debian ../../
./autogen.sh
make distcheck
mkdir ../../"xneur-${CUR_VER}"
tar -xvf "xneur-${CUR_VER}.tar.gz" -C ../../
cd ../..
rm -R ./"xneur-tmp"
# end building

#Create .orig.tar.gz
tar -czf "xneur_$NEW_VER.orig.tar.gz" "xneur-${CUR_VER}"

cd "xneur-${CUR_VER}"
# restore debianize settings
mv ../debian ./

read -p "Build package only on local system (y/N)?" RESPONSE
echo
if [ "$RESPONSE" = y ] ; then
	# If you want to build package on your system uncomment this:
	dch -v "$NEW_VER-mybuild1" "New upstream version ${CUR_VER}"
	dpkg-buildpackage -rfakeroot

	cd ..
	rm -R ./"xneur-${NEW_VER}"
else

# Note: I am using gnupg-agent for comfortable work

# begin update for basic releases
dch -b --force-distribution --distribution "saucy" -v "${NEW_VER}-1saucy" \
  "Minor update."
debuild -S -sa
# end update for basic releases

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "raring" -v "${NEW_VER}-1raring" \
  "Automated backport upload; no source changes."
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "quantal" -v "${NEW_VER}-1quantal" \
  "Automated backport upload; no source changes."
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "precise" -v "${NEW_VER}-1precise" \
  "Automated backport upload; no source changes."
debuild -S -sd

cp -f ../changelog debian/changelog
dch -b --force-distribution --distribution "lucid" -v "${NEW_VER}-1lucid" \
  "Automated backport upload; no source changes."
debuild -S -sd

# end update for other releases

cd ..
echo "Download to Launcshpad Saucy..."
dput ppa xneur_${NEW_VER}-1saucy_source.changes | cat
echo "Download to Launcshpad Raring..."
dput ppa xneur_${NEW_VER}-1raring_source.changes | cat
echo "Download to Launchpad Quantal..."
dput ppa xneur_${NEW_VER}-1quantal_source.changes | cat
echo "Download to Launchpad Precise..."
dput ppa xneur_${NEW_VER}-1precise_source.changes | cat
echo "Download to Launchpad Lucid..."
dput ppa xneur_${NEW_VER}-1lucid_source.changes | cat

rm -R ./"xneur-${NEW_VER}"
rm -R ./"xneur-${CUR_VER}"
fi

echo "Update xneur finished successfully"


